import { kv } from "@vercel/kv";
import { OpenAIStream, StreamingTextResponse } from 'ai'
import { Configuration, OpenAIApi } from 'openai-edge'

import generatePalette from '@/actions/generatePalette'

import Results from '@/components/Results/Results'

export const metadata = {
  title: 'Generate a color palette',
  description: 'Generated by create next app',
}

export default async function Generate(props: { searchParams?: {
  query?: string
}}) {
  let data: any
  if (props?.searchParams?.query) {
    const submit = new FormData()
    submit.append("query", props?.searchParams?.query)
    data = await (await generatePalette(submit)).json()
  }
  const count = await kv.hget('inspector:count', 'requests');
  console.info({ count })
  return (
    <main className="flex min-h-screen flex-col items-center justify-between p-24">
      <h1>Generate a palette...</h1>
      <h2>{`${count} palettes generated!`}</h2>
      <form>
        <input required name="query" id="query" type="text" placeholder="Generate a palette based on Pepsi, clowns, clouds, etc." />
        <button>Generate</button>
      </form>
      {data ? <Results data={data}/> : null}
    </main>
  )
}